// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            Int       @id @default(autoincrement())
  userId        String    @unique
  name          String
  nickname      String
  password      String
  email         String    @unique
  emailVerified Boolean?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  favs          Fav[]
  voices        Voice[]
  History       History[]
}

model Voice {
  id         Int           @id @default(autoincrement())
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  favs       Fav[]
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  category   VoiceCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
  status     VoiceStatus   @relation(fields: [statusId], references: [id])
  statusId   Int
}

model Fav {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  voice     Voice    @relation(fields: [voiceId], references: [id])
  voiceId   Int

  @@index([userId])
}

model VoiceCategory {
  id       Int     @id @default(autoincrement())
  category String
  Voice    Voice[]
}

model VoiceStatus {
  id     Int     @id @default(autoincrement())
  status String
  Voice  Voice[]
}

model History {
  id        Int           @id @default(autoincrement())
  createdAt DateTime      @default(now())
  user      User          @relation(fields: [userId], references: [id])
  userId    Int
  map       String
  level     Level         @relation(fields: [levelId], references: [id])
  levelId   Int
  status    HistoryStatus @relation(fields: [statusId], references: [id])
  statusId  Int
}

model HistoryStatus {
  id      Int       @id @default(autoincrement())
  status  String
  History History[]
}

model Level {
  id      Int       @id @default(autoincrement())
  name    String
  History History[]
}
