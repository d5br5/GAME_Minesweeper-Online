// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id            Int            @id @default(autoincrement())
  userId        String         @unique
  password      String
  salt          String
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  favs          Fav[]
  voices        Voice[]
  refreshToken  RefreshToken[]
}

model Shop{
  id Int @id @default(autoincrement())
  name String
  contact String
  url String
  lat Float
  lng Float
  favs Fav[]
}

model Fav {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  shop Shop @relation(fields: [shopId], references: [id])
  shopId Int

  @@index([userId])
}

model Voice {
  id         Int           @id @default(autoincrement())
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
  user       User          @relation(fields: [userId], references: [id])
  userId     Int
  category   VoiceCategory @relation(fields: [categoryId], references: [id])
  categoryId Int
  status     VoiceStatus   @relation(fields: [statusId], references: [id])
  statusId   Int
}

model VoiceCategory {
  id       Int     @id @default(autoincrement())
  category String
  Voice    Voice[]
}

model VoiceStatus {
  id     Int     @id @default(autoincrement())
  status String
  voice  Voice[]
}


model RefreshToken {
  id        Int    @id @default(autoincrement())
  token     String @db.LongText
  user      User   @relation(fields: [userId], references: [id])
  userId    Int
  expiration BigInt
  clientIp  String
}
